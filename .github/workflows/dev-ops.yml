# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.5
        with:
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 12.x
          # Set this option if you want the action to check for the latest available version that satisfies the version spec
          check-latest: true
      
      - name: Install dependencies
        run: npm install

      - name: Check for linter errors
        run: npm run lint

      - name: Run Unit tests
        run: npm run test:unit
        
      - name: Build
        run: npm run build

      - name: Zip release
        uses: papeloto/action-zip@v1
        with:
          files: dist/
          dest: release.zip
          
      - name: Bump version and push tag
        id: auto-version
        uses: ChloePlanet/github-tag-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          RELEASE_BRANCHES: main
        
      - name: Upload release
        if: ${{ steps.auto-version.outputs.tag_generated == 1 }}
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title:  ${{ steps.auto-version.outputs.new_tag }}
          files: release.zip
